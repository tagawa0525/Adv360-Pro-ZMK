
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
     &kp EQUAL     &kp N1        &kp N2    &kp N3     &kp N4  &kp N5                &tog 1                                                                                                &tog 3  &kp N6    &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
       &kp TAB      &kp Q         &kp W     &kp E      &kp R   &kp T            &kp INSERT                                                                                     &kp K_APPLICATION   &kp Y     &kp U      &kp I     &kp O     &kp P   &kp BSLH
 &mt ESC LCTRL      &kp A         &kp S     &kp D      &kp F   &kp G               &kp ESC       &kp HOME           &kp END                          &kp PG_UP  &kp PAGE_DOWN            &kp ESC   &kp H     &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
     &kp LSHFT      &kp Z         &kp X     &kp C      &kp V   &kp B                                       &kp LEFT_CONTROL                  &kp RIGHT_CONTROL                                     &kp N     &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
         &mo 2  &kp GRAVE  &kp LEFT_WIN  &kp LEFT  &kp RIGHT                     &kp SPACE  &kp BACKSPACE          &kp LALT                           &kp RALT     &kp DELETE          &kp ENTER          &kp DOWN     &kp UP  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
  &none   &none      &none  &kp KP_SLASH  &kp KP_MULTIPLY  &kp KP_EQUAL            &trans                                                  &trans   &none  &kp KP_NUM  &kp KP_SLASH  &kp KP_MULTIPLY  &kp KP_EQUAL   &none
 &trans   &none  &kp KP_N7     &kp KP_N8        &kp KP_N9  &kp KP_MINUS            &trans                                                  &trans   &none   &kp KP_N7     &kp KP_N8        &kp KP_N9  &kp KP_MINUS   &none
 &trans   &none  &kp KP_N4     &kp KP_N5        &kp KP_N6   &kp KP_PLUS            &trans  &trans  &trans                  &trans  &trans  &trans   &none   &kp KP_N4     &kp KP_N5        &kp KP_N6   &kp KP_PLUS   &none
 &trans   &none  &kp KP_N1     &kp KP_N2        &kp KP_N3  &kp KP_ENTER                            &trans                  &trans                   &none   &kp KP_N1     &kp KP_N2        &kp KP_N3  &kp KP_ENTER  &trans
 &trans   &none  &kp KP_N0         &none       &kp KP_DOT                          &trans  &trans  &trans                  &trans  &trans  &trans           &kp KP_N0         &none       &kp KP_DOT         &none  &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5            &trans                                                  &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
  &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans   &trans   &trans
  &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
  &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans   &trans   &trans
  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                 &trans                                                                                &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                           &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none         &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                        &none                       &none                                       &none       &none       &none   &none   &none   &none
 &trans         &none         &none         &none         &none                                &none  &out OUT_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_DEC  &bl BL_INC   &none   &none  &trans
            >;
        };

    };
};
